diff --git a/js/ui/environment.js b/js/ui/environment.js
index 77f09bf10c..bbbdf1d31d 100644
--- a/js/ui/environment.js
+++ b/js/ui/environment.js
@@ -8,7 +8,6 @@
 import Clutter from 'gi://Clutter';
 import Gdk from 'gi://Gdk';
 import Gio from 'gi://Gio';
-import GioUnix from 'gi://GioUnix';
 import GLib from 'gi://GLib';
 import GObject from 'gi://GObject';
 import Meta from 'gi://Meta';
@@ -341,17 +340,6 @@
     }
 };
 
-// Work around https://gitlab.gnome.org/GNOME/glib/-/issues/3744
-if (!GioUnix.DesktopAppInfo.prototype.has_key) {
-    GioUnix.DesktopAppInfo.prototype.has_key = function (key) {
-        return GioUnix.DesktopAppInfo.has_key(this, key);
-    };
-
-    GioUnix.DesktopAppInfo.prototype.get_categories = function () {
-        return GioUnix.DesktopAppInfo.get_categories(this);
-    };
-}
-
 const slowdownEnv = GLib.getenv('GNOME_SHELL_SLOWDOWN_FACTOR');
 if (slowdownEnv) {
     let factor = parseFloat(slowdownEnv);

diff --git a/meson.build b/meson.build
index 66e1592f33..ce2215032d 100644
--- a/meson.build
+++ b/meson.build
@@ -20,12 +20,13 @@
 
 eds_req = '>= 3.33.1'
 gcr_req = '>= 3.90.0'
-gio_req = '>= 2.85.1'
-gjs_req = '>= 1.85.1'
+gio_req = '>= 2.79.2'
+gi_req = '>= 1.49.1'
+gjs_req = '>= 1.81.2'
 gtk_req = '>= 4.0'
 mutter_req = '>= 49.beta'
 polkit_req = '>= 0.100'
-schemas_req = '>= 49.alpha'
+schemas_req = '>= 48.0'
 systemd_req = '>= 246'
 gnome_desktop_req = '>= 40'
 pipewire_req = '>= 0.3.49'
@@ -69,7 +70,7 @@
 atk_bridge_dep = dependency('atk-bridge-2.0')
 gcr_dep = dependency('gcr-4', version: gcr_req)
 gdk_pixbuf_dep = dependency('gdk-pixbuf-2.0')
-gi_dep = dependency('girepository-2.0', version: gio_req)
+gi_dep = dependency('gobject-introspection-1.0', version: gi_req)
 gio_dep = dependency('gio-2.0', version: gio_req)
 gio_unix_dep = dependency('gio-unix-2.0', version: gio_req)
 gjs_dep = dependency('gjs-1.0', version: gjs_req)

diff --git a/src/main.c b/src/main.c
index af4fa8597e..99eca3e3c9 100644
--- a/src/main.c
+++ b/src/main.c
@@ -13,7 +13,7 @@
 #include <clutter/clutter.h>
 #include <glib-unix.h>
 #include <glib/gi18n-lib.h>
-#include <girepository/girepository.h>
+#include <girepository.h>
 #include <meta/meta-context.h>
 #include <meta/meta-plugin.h>
 #include <meta/prefs.h>
@@ -133,7 +133,7 @@
 
 #ifdef HAVE_EXE_INTROSPECTION
 static void
-maybe_add_rpath_introspection_paths (GIRepository *repo)
+maybe_add_rpath_introspection_paths (void)
 {
   ElfW (Dyn) *dyn;
   ElfW (Dyn) *rpath = NULL;
@@ -210,8 +210,8 @@
       g_debug ("Prepending RPATH directory '%s' "
                "to introsepciton library search path",
                rpath_dir->str);
-      gi_repository_prepend_search_path (repo, rpath_dir->str);
-      gi_repository_prepend_library_path (repo, rpath_dir->str);
+      g_irepository_prepend_search_path (rpath_dir->str);
+      g_irepository_prepend_library_path (rpath_dir->str);
     }
 }
 #endif /* HAVE_EXE_INTROSPECTION */
@@ -219,23 +219,20 @@
 static void
 shell_introspection_init (void)
 {
-  g_autoptr (GIRepository) repo = NULL;
 
-  repo = gi_repository_dup_default ();
-
-  gi_repository_prepend_search_path (repo, MUTTER_TYPELIB_DIR);
-  gi_repository_prepend_search_path (repo, SHELL_TYPELIB_DIR);
+  g_irepository_prepend_search_path (MUTTER_TYPELIB_DIR);
+  g_irepository_prepend_search_path (SHELL_TYPELIB_DIR);
 
   /* We need to explicitly add the directories where the private libraries are
    * installed to the GIR's library path, so that they can be found at runtime
    * when linking using DT_RUNPATH (instead of DT_RPATH), which is the default
    * for some linkers (e.g. gold) and in some distros (e.g. Debian).
    */
-  gi_repository_prepend_library_path (repo, MUTTER_TYPELIB_DIR);
-  gi_repository_prepend_library_path (repo, GNOME_SHELL_PKGLIBDIR);
+  g_irepository_prepend_library_path (MUTTER_TYPELIB_DIR);
+  g_irepository_prepend_library_path (GNOME_SHELL_PKGLIBDIR);
 
 #ifdef HAVE_EXE_INTROSPECTION
-  maybe_add_rpath_introspection_paths (repo);
+  maybe_add_rpath_introspection_paths ();
 #endif
 }
 
@@ -614,7 +611,7 @@
   context = meta_create_context (WM_NAME);
   meta_context_add_option_entries (context, gnome_shell_options,
                                    GETTEXT_PACKAGE);
-  meta_context_add_option_group (context, gi_repository_get_option_group ());
+  meta_context_add_option_group (context, g_irepository_get_option_group ());
 
   session_mode = (char *) g_getenv ("GNOME_SHELL_SESSION_MODE");
 

diff --git a/src/run-js-test.c b/src/run-js-test.c
index 4f795252c2..7a539d3a23 100644
--- a/src/run-js-test.c
+++ b/src/run-js-test.c
@@ -30,7 +30,7 @@
 #include <stdlib.h>
 #include <string.h>
 
-#include <girepository/girepository.h>
+#include <girepository.h>
 #include <gjs/gjs.h>
 
 #include "shell-global.h"
@@ -64,7 +64,6 @@
 main (int argc, char **argv)
 {
   GOptionContext *context;
-  g_autoptr (GIRepository) repo = NULL;
   g_autoptr (GError) error = NULL;
   ShellGlobal *global;
   GjsContext *js_context;
@@ -86,10 +85,8 @@
   global = shell_global_get ();
   js_context = _shell_global_get_gjs_context (global);
 
-  repo = gi_repository_dup_default ();
-
-  gi_repository_prepend_search_path (repo, MUTTER_TYPELIB_DIR);
-  gi_repository_prepend_search_path (repo, SHELL_TYPELIB_DIR);
+  g_irepository_prepend_search_path (MUTTER_TYPELIB_DIR);
+  g_irepository_prepend_search_path (SHELL_TYPELIB_DIR);
 
   if (argc < 2)
     {
