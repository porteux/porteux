--- plugin-desktopswitch/desktopswitch.cpp	2023-09-04 22:04:03.000000000 +0200
+++ plugin-desktopswitch/desktopswitch-patched.cpp	2023-09-04 22:59:12.845910670 +0200
@@ -33,7 +33,6 @@
 #include <lxqt-globalkeys.h>
 #include <LXQt/GridLayout>
 #include <KWindowSystem/KWindowSystem>
-#include <KWindowSystem/KX11Extras>
 #include <QX11Info>
 #include <cmath>
 
@@ -47,7 +46,7 @@
     QObject(),
     ILXQtPanelPlugin(startupInfo),
     m_pSignalMapper(new QSignalMapper(this)),
-    m_desktopCount(KX11Extras::numberOfDesktops()),
+    m_desktopCount(KWindowSystem::numberOfDesktops()),
     mRows(-1),
     mShowOnlyActive(false),
     mDesktops(new NETRootInfo(QX11Info::connection(), NET::NumberOfDesktops | NET::CurrentDesktop | NET::DesktopNames, NET::WM2DesktopLayout)),
@@ -63,16 +62,16 @@
 
     settingsChanged();
 
-    onCurrentDesktopChanged(KX11Extras::currentDesktop());
+    onCurrentDesktopChanged(KWindowSystem::currentDesktop());
     QTimer::singleShot(0, this, SLOT(registerShortcuts()));
 
     connect(m_buttons, &QButtonGroup::idClicked, this, &DesktopSwitch::setDesktop);
 
-    connect(KX11Extras::self(), &KX11Extras::numberOfDesktopsChanged, this, &DesktopSwitch::onNumberOfDesktopsChanged);
-    connect(KX11Extras::self(), &KX11Extras::currentDesktopChanged,   this, &DesktopSwitch::onCurrentDesktopChanged);
-    connect(KX11Extras::self(), &KX11Extras::desktopNamesChanged,     this, &DesktopSwitch::onDesktopNamesChanged);
+    connect(KWindowSystem::self(), &KWindowSystem::numberOfDesktopsChanged, this, &DesktopSwitch::onNumberOfDesktopsChanged);
+    connect(KWindowSystem::self(), &KWindowSystem::currentDesktopChanged,   this, &DesktopSwitch::onCurrentDesktopChanged);
+    connect(KWindowSystem::self(), &KWindowSystem::desktopNamesChanged,     this, &DesktopSwitch::onDesktopNamesChanged);
 
-    connect(KX11Extras::self(), static_cast<void (KX11Extras::*)(WId, NET::Properties, NET::Properties2)>(&KX11Extras::windowChanged),
+    connect(KWindowSystem::self(), static_cast<void (KWindowSystem::*)(WId, NET::Properties, NET::Properties2)>(&KWindowSystem::windowChanged),
             this, &DesktopSwitch::onWindowChanged);
 }
 
@@ -137,7 +136,7 @@
     const QList<QAbstractButton*> btns = m_buttons->buttons();
 
     int i = 0;
-    const int current_desktop = KX11Extras::currentDesktop();
+    const int current_desktop = KWindowSystem::currentDesktop();
     const int current_cnt = btns.count();
     const int border = qMin(btns.count(), m_desktopCount);
     //update existing buttons
@@ -145,9 +144,9 @@
     {
         DesktopSwitchButton * button = qobject_cast<DesktopSwitchButton*>(btns[i]);
         button->update(i, mLabelType,
-                       KX11Extras::desktopName(i + 1).isEmpty() ?
+                       KWindowSystem::desktopName(i + 1).isEmpty() ?
                        tr("Desktop %1").arg(i + 1) :
-                       KX11Extras::desktopName(i + 1));
+                       KWindowSystem::desktopName(i + 1));
         button->setVisible(!mShowOnlyActive || i + 1 == current_desktop);
     }
 
@@ -156,9 +155,9 @@
     for ( ; i < m_desktopCount; ++i)
     {
         b = new DesktopSwitchButton(&mWidget, i, mLabelType,
-                KX11Extras::desktopName(i+1).isEmpty() ?
+                KWindowSystem::desktopName(i+1).isEmpty() ?
                 tr("Desktop %1").arg(i+1) :
-                KX11Extras::desktopName(i+1));
+                KWindowSystem::desktopName(i+1));
         mWidget.layout()->addWidget(b);
         m_buttons->addButton(b, i);
         b->setVisible(!mShowOnlyActive || i + 1 == current_desktop);
@@ -215,7 +214,7 @@
 
 void DesktopSwitch::setDesktop(int desktop)
 {
-    KX11Extras::setCurrentDesktop(desktop + 1);
+    KWindowSystem::setCurrentDesktop(desktop + 1);
 }
 
 void DesktopSwitch::onNumberOfDesktopsChanged(int count)
@@ -330,9 +329,9 @@
     if(abs(m_mouseWheelThresholdCounter) < 100)
         return;
 
-    int max = KX11Extras::numberOfDesktops();
+    int max = KWindowSystem::numberOfDesktops();
     int delta = rotationSteps < 0 ? 1 : -1;
-    int current = KX11Extras::currentDesktop() + delta;
+    int current = KWindowSystem::currentDesktop() + delta;
 
     if (current > max){
         current = 1;
@@ -341,5 +340,5 @@
         current = max;
 
     m_mouseWheelThresholdCounter = 0;
-    KX11Extras::setCurrentDesktop(current);
+    KWindowSystem::setCurrentDesktop(current);
 }
